apply plugin: 'com.android.application'
apply plugin: 'com.google.protobuf'


android {
    compileSdkVersion 29
    buildToolsVersion "29.0.3"

    bundle {
        language {
            //app bundle不过滤语言
            // Specifies that the app bundle should not support
            // configuration APKs for language resources. These
            // resources are instead packaged with each base and
            // dynamic feature APK.
            enableSplit = false
        }
        abi {
            // This property is set to true by default.
            enableSplit = false
        }
    }

    defaultConfig {
        applicationId "com.quarkonium.qpocket"
        minSdkVersion 23
        targetSdkVersion 29

        versionCode 531
        versionName "5.3.1"

        multiDexEnabled true

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        javaCompileOptions {
            annotationProcessorOptions {
                includeCompileClasspath = true
            }
        }

        externalNativeBuild {
            cmake {
                cppFlags ""
            }
        }

        //指定cpu so库为主流armeabi-v7a，避免以太坊so库不支持armeabi导致部分机型崩溃，同时兼容64位
        ndk {
            abiFilters 'armeabi-v7a', 'arm64-v8a'
//            abiFilters 'armeabi-v7a', 'arm64-v8a', 'x86', 'x86_64'
        }
    }


    lintOptions {
        checkReleaseBuilds false
        abortOnError false
        disable 'MissingTranslation'
        disable 'ExtraTranslation'
        disable 'GoogleAppIndexingWarning'
        baseline file("lint-baseline.xml")
    }

    buildTypes {
        release {
            // 混淆
            minifyEnabled true
            // Zipalign优化
            zipAlignEnabled true
            // 前一部分代表系统默认的android程序的混淆文件，该文件已经包含了基本的混淆声明，后一个文件是自己的定义混淆文件
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'

            lintOptions {
                checkReleaseBuilds false
                abortOnError false
            }
        }

        debug {
            // 混淆
//            minifyEnabled true
            zipAlignEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'

            lintOptions {
                checkReleaseBuilds false
                abortOnError false
            }
        }
    }

    compileOptions {
        targetCompatibility 1.8
        sourceCompatibility 1.8
    }

    externalNativeBuild {
        cmake {
            path "CMakeLists.txt"
        }
    }

    sourceSets {
        main {
            jniLibs.srcDirs = ['libs']
        }

        //修改生成的apk名字
        applicationVariants.all { variant ->
            variant.outputs.all { output ->
                if (variant.buildType.name.equals('release')) {
                    def releaseApkName = ''
                    if (variant.buildType.name.contains('Official')) {
                        releaseApkName = 'QPocket' + '-' + 'v' + variant.versionName + '.apk'
                    } else {
                        releaseApkName = 'QPocket' + '-' + 'v' + variant.versionName + '-' + variant.productFlavors[0].name + '.apk'
                    }

                    outputFileName = releaseApkName
                }
            }
        }
    }

    flavorDimensions "channel"
    productFlavors {
        // 一级渠道
        official {
            manifestPlaceholders = [TD_CHANNEL_VALUE: 'qPocket官方', UMENG_CHANNEL_VALUE: 'official']
        }

//        market360 {
//            manifestPlaceholders = [TD_CHANNEL_VALUE: '360手机安全卫士', UMENG_CHANNEL_VALUE: 'market360']
//        }
//        baidu {
//            manifestPlaceholders = [TD_CHANNEL_VALUE: '百度移动应用中心', UMENG_CHANNEL_VALUE: 'baidu']
//        }
//        tencent {
//            manifestPlaceholders = [TD_CHANNEL_VALUE: '腾讯开放平台', UMENG_CHANNEL_VALUE: 'tencent']
//        }
//        wanDouJia {
//            manifestPlaceholders = [TD_CHANNEL_VALUE: '豌豆荚', UMENG_CHANNEL_VALUE: 'wanDouJia']
//        }
        googlePlay {
            manifestPlaceholders = [TD_CHANNEL_VALUE: 'GooglePlay', UMENG_CHANNEL_VALUE: 'GooglePlay']
        }

//        // 二级渠道
//        beeStore {
//            manifestPlaceholders = [TD_CHANNEL_VALUE: 'BeeStore', UMENG_CHANNEL_VALUE: 'beeStore']
//        }

//        // 厂商渠道
        xiaomi {
            manifestPlaceholders = [TD_CHANNEL_VALUE: '小米应用商店', UMENG_CHANNEL_VALUE: 'xiaomi']
        }
        huawei {
            manifestPlaceholders = [TD_CHANNEL_VALUE: '华为应用商店', UMENG_CHANNEL_VALUE: 'huawei']
        }
        meizu {
            manifestPlaceholders = [TD_CHANNEL_VALUE: '魅族应用商店', UMENG_CHANNEL_VALUE: 'meizu']
        }
        oppo {
            manifestPlaceholders = [TD_CHANNEL_VALUE: 'OPPO应用商店', UMENG_CHANNEL_VALUE: 'oppo']
        }
        vIVO {
            manifestPlaceholders = [TD_CHANNEL_VALUE: 'VIVO应用商店', UMENG_CHANNEL_VALUE: 'vivo']
        }
    }
}

protobuf {
    //这里配置protoc编译器
    protoc {
        artifact = 'com.google.protobuf:protoc:3.5.1-1'
    }
    plugins {
        javalite {
            artifact = "com.google.protobuf:protoc-gen-javalite:3.0.0"
        }
        grpc {
            artifact = 'io.grpc:protoc-gen-grpc-java:1.9.0'
        }
    }
    //这里配置生成目录，编译后会在build的目录下生成对应的java文件
    generateProtoTasks {
        all().each { task ->
            task.plugins {
                javalite {}
                grpc {
                    // Options added to --grpc_out
                    option 'lite'
                }
            }
        }
    }
}

dependencies {
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test.ext:junit:1.1.1'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'
    implementation 'androidx.multidex:multidex:2.0.1'
    implementation 'androidx.recyclerview:recyclerview:1.1.0'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    implementation 'androidx.cardview:cardview:1.0.0'
    implementation 'androidx.appcompat:appcompat:1.1.0'
    implementation 'androidx.palette:palette:1.0.0'
    implementation 'com.google.android.material:material:1.1.0'

    // ReactiveX
    implementation 'io.reactivex.rxjava2:rxjava:2.2.3'
    implementation 'io.reactivex.rxjava2:rxandroid:2.1.0'

    // Dagger 2 Dagger core
    // Dagger Android  依赖注入
    implementation 'com.google.dagger:dagger:2.26'
    annotationProcessor 'com.google.dagger:dagger-compiler:2.26'
    // if you use the support libraries
    implementation 'com.google.dagger:dagger-android:2.26'
    implementation 'com.google.dagger:dagger-android-support:2.26'
    annotationProcessor 'com.google.dagger:dagger-android-processor:2.26'

    // ViewModel
    implementation 'androidx.lifecycle:lifecycle-viewmodel:2.2.0'
    // LiveData
    implementation "androidx.lifecycle:lifecycle-livedata:2.2.0"
    //lifecycle
    implementation 'androidx.lifecycle:lifecycle-runtime:2.2.0'

    //图片缓存
    implementation 'com.github.bumptech.glide:glide:4.11.0'

    //二维码扫描生成
    implementation 'cn.bingoogolapple:bga-qrcode-zbar:1.3.7'
    //zxing不能升级，因为高版本使用了android api 25以上的特性，导致低版本会崩溃
    implementation 'com.google.zxing:core:3.3.3'

    //数据库
    implementation 'com.j256.ormlite:ormlite-android:5.0'
    implementation 'com.j256.ormlite:ormlite-core:5.0'

    // LeanCloud 基础包
    implementation 'cn.leancloud.android:avoscloud-sdk:4.7.8'

    //RecyclerView 资料https://github.com/CymChad/BaseRecyclerViewAdapterHelper
    implementation 'com.github.CymChad:BaseRecyclerViewAdapterHelper:3.0.2'

    //崩溃监听
    implementation 'com.tencent.bugly:crashreport:3.1.9'
    //其中latest.release指代最新Bugly SDK版本号，也可以指定明确的版本号，例如2.1.9
    implementation 'com.tencent.bugly:nativecrashreport:3.7.1'
    //其中latest.release指代最新Bugly NDK版本号，也可以指定明确的版本号，例如3.0

    //内存监听
    debugImplementation 'com.squareup.leakcanary:leakcanary-android:2.2'

    //密码强度
    implementation 'com.nulab-inc:zxcvbn:1.2.5'

    //打印
    implementation 'com.orhanobut:logger:2.2.0'

    //以太坊 Etherium client
    implementation 'org.ethereum:geth:1.7.0'

    //hd钱包路径
    implementation 'io.github.novacrypto:BIP44:2019.01.27'
    implementation 'io.github.novacrypto:BIP39:2019.01.27'
    implementation 'io.github.novacrypto:BIP32derivation:2019.01.27@jar'
    implementation 'io.github.novacrypto:Base58:2019.01.27@jar'
    implementation 'io.github.novacrypto:Hash160:2019.01.27@jar'

    //json解析
    implementation 'com.fasterxml.jackson.core:jackson-databind:2.9.4'

    //指纹识别
    implementation files('libs/MeiZu_Fingerprint.jar')
    implementation files('libs/Samsung_Fingerprint_Pass-v1.2.6.jar')
    implementation files('libs/Samsung_Fingerprint_Sdk-v1.0.0.jar')

    //打点
    implementation files('libs/SaaS_AppAnalytics_Android_SDK_V4.0.22.jar')

    //转圈控件
    implementation 'com.xdandroid:materialprogressview:1.2.0'

    //hook华为设备
    implementation 'com.llew.huawei:verifier:1.0.6'

    //兼容tron spongycastle补充包
    implementation 'com.madgag.spongycastle:prov:1.58.0.0'

    //grpc
    implementation 'io.grpc:grpc-okhttp:1.9.0'
    implementation 'io.grpc:grpc-protobuf-lite:1.9.0'
    implementation 'io.grpc:grpc-stub:1.9.0'
    implementation 'javax.annotation:javax.annotation-api:1.2'

    //json
    implementation 'com.google.code.gson:gson:2.8.5'

    //下拉 上拉控件
    implementation 'com.scwang.smartrefresh:SmartRefreshLayout:1.1.0'
    implementation 'com.scwang.smartrefresh:SmartRefreshHeader:1.1.0'

    //手机号码检测
    implementation files('libs/libphonenumber-8.9.9.jar')

    //tsl兼容库
    implementation 'org.conscrypt:conscrypt-android:2.0.0'

    //fragment嵌套库
    implementation 'me.yokeyword:fragmentationx:1.0.2'

    //recycler分隔线
    implementation 'com.yqritc:recyclerview-flexibledivider:1.4.0'

    //eventbus
    implementation 'org.greenrobot:eventbus:3.1.1'

    //recycler悬浮标题
    implementation 'com.timehop.stickyheadersrecyclerview:library:0.4.3'

    //微信sdk
    implementation 'com.tencent.mm.opensdk:wechat-sdk-android-with-mta:5.4.0'

    //*************比特币SDK*************
    // Http client
    //比特币库中包含有okhttp库
    implementation 'com.squareup.okhttp3:okhttp:3.12.3'
    //ECDS加密解密
    //比特币库中包含有org.bouncycastle库
    //implementation 'org.bouncycastle:bcprov-jdk15on:1.56'
    implementation('org.bitcoinj:bitcoinj-core:0.15.5') {
        exclude group: 'com.google.protobuf'
        exclude group: 'com.squareup.okhttp3'
    }
    //*************比特币SDK*************

    //权限请求工具
    implementation 'com.github.tbruyelle:rxpermissions:0.10.2'

    implementation 'com.just.agentweb:agentweb:4.0.2'
}
